@model StackOverflow.ViewModels.QuestionViewModel

@{
    ViewBag.Title = "View Question";
}

<div class="container">
    <div class="row pt-5">
        <div class="col">
            <h3>@Model.QuestionName</h3>
            <div class="row mb-3 align-items-center justify-content-around">
                <div class="col">
                    <span class="badge bg-info">@Model.Category.CategoryName</span>
                </div>
                <div class="col">

                    @if (Convert.ToInt32(Session["CurrentUserID"]) != Model.UserID)
                    {
                        <span class="text-muted">
                            Asker:
                        </span><b class="text-black">@Model.User.Name</b>
                    }
                    else
                    {
                        <span class="text-muted">
                            Asker:
                        </span>
                        <b class="text-black">you</b>
                    }

                </div>
                <div class="col">
                    <span class="text-muted">
                        asked at
                    </span>
                    <b class="text-black">
                        @Model.QuestionDateTime.ToString(string.Format("yyyy/MM/dd"))
                    </b>
                </div>
                <div class="col">
                    <span class="badge badge-pill bg-success">
                        @Model.ViewsCount
                    </span>
                    <small>Views</small>
                </div>
            </div>
            <hr class="my-3" />
            @if (Model.AnswersCount == 0)
            {
                <p class="text-danger">No answers yet!!!</p>
            }
         </div>
    <div>
        <!--title end -->
        <!--answer block-->
        </div class="row">
            <div class="col">
                @for (int i = 0; i < Model.Answers.Count; i++)
                {
                <div class="row">
                    <div class="col-2">
                        <span class="badge bg-secondary votescount">
                            @Model.Answers[i].VotesCount
                        </span> Votes
                        @if (Session["CurrentUserName"] != null && Convert.ToInt32(Session["CurrentUserID"]) != Model.Answers[i].UserID)
                        {
                            if (Model.Answers[i].CurrentUserVoteType == 1)
                            {
                                <img src="~/Images/up-color.png" class="btnUpVote" style="cursor:pointer" width="24" data-answerid="@Model.Answers[i].AnswerID" />
                                <img src="~/Images/down-empty.png" class="btnDownVote" style="cursor:pointer" width="24" data-answerid="@Model.Answers[i].AnswerID" />
                            }
                            else if (Model.Answers[i].CurrentUserVoteType == -1)
                            {
                                <img src="~/Images/up-empty.png" class="btnUpVote" style="cursor:pointer" width="24" data-answerid="@Model.Answers[i].AnswerID" />
                                <img src="~/Images/down-color.png" class="btnDownVote" style="cursor:pointer" width="24" data-answerid="@Model.Answers[i].AnswerID" />
                            }
                            else
                            {
                                <img src="~/Images/up-empty.png" class="btnUpVote" style="cursor:pointer" width="24" data-answerid="@Model.Answers[i].AnswerID" />
                                <img src="~/Images/down-empty.png" class="btnDownVote" style="cursor:pointer" width="24" data-answerid="@Model.Answers[i].AnswerID" />
                            }
                        }
                    </div>
                    <div class="col-10">
                        @if (Convert.ToInt32(Session["CurrentUserID"]) == Model.Answers[i].UserID)
                        {
                            <p class="answer" style="white-space:pre-wrap;">@Html.Raw(Model.Answers[i].AnswerText)</p>
                            <button class="btn btn-info editbutton mb-2" data-bs-toggle="modal" data-bs-target="#EditModal">Edit</button>
                            <form class="needs-validation d-none" novalidate="novalidate" action="/questions/editanswer" method="post">
                                <h4>Edit your answer</h4>
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="AnswerID" value="@Model.Answers[i].AnswerID" />
                                <input type="hidden" name="QuestionID" value="@Model.Answers[i].QuestionID" />
                                <div class="form-row">
                                    <div class="form-group col-sm-12">
                                        <textarea rows="6" class="form-control" id="txtAnswer" placeholder="Enter your answer" name="AnswerText" required="required">@Model.Answers[i].AnswerText</textarea>
                                        <div class="valid-feedback">
                                            Looks good!
                                        </div>
                                        <div class="invalid-feedback">
                                            Please Enter Answer
                                        </div>
                                    </div>
                                </div>
                                <button type="submit" class="mt-2 btn btn-warning">Update Answer</button>
                                <div class="text-danger">
                                    @Html.ValidationSummary()
                                </div>
                            </form>
                        }
                        else
                        {
                            <p class="answer" style="white-space:pre-wrap;">@Html.Raw(Model.Answers[i].AnswerText)</p>
                        }
                    </div>
                    <hr />
                    <div class="col-12 d-flex justify-content-end">
                        @if (Convert.ToInt32(Session["CurrentUserID"]) != Model.Answers[i].UserID)
                        {
                            @:by @Model.Answers[i].User.Name
                        }
                        else
                        {
                            @:by you
                        }
                        <small class="text-muted">@Model.Answers[i].AnswerDateTime.ToString(string.Format("yyyy/MM/dd")) </small>
                    </div>

                </div>
                }
                @if (Session["CurrentUserName"] != null)
                {
                    <form class="needs-validation" novalidate="novalidate" action="/questions/addanswer" method="post">
                        <div class="form-group form-row">
                            <div class="col-sm-12">
                                <h4>Add your answer</h4>
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="QuestionID" value="@Model.QuestionID" />
                                <div class="form-row">
                                    <div class="form-group col-sm-12">
                                        <textarea class="form-control" id="txtAnswer" placeholder="Enter your answer" name="AnswerText" required="required"></textarea>
                                        <div class="valid-feedback">
                                            Looks good!
                                        </div>
                                        <div class="invalid-feedback">
                                            Please Enter Answer
                                        </div>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary mt-3">Add Answer</button>
                                <div class="text-danger">
                                    @Html.ValidationSummary()
                                </div>
                            </div>
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>
<script>
    $("#questions").addClass("active");
</script>
<script>
    $(".btnUpVote").click(function ()
    {
        var UpBtn = $(this);
        var DownBtn = UpBtn.parent().find(".btnDownVote");
        if (UpBtn.attr("src") == "/Images/up-empty.png")
        {
            var value;
            if (UpBtn.attr("src") == "/Images/up-empty.png" && DownBtn.attr("src") == "/Images/down-empty.png")
                value = 1;
            else
                value = 2;
            $.ajax({
                url: "/api/questions?answerid=" + UpBtn.attr("data-answerid") + "&value=" + value + "&UserID=@Session["CurrentUserID"]",
                type: "POST",
                success: function () {
                    UpBtn.parent().find(".votescount").text(parseInt(UpBtn.parent().find(".votescount").text()) + value);
                    UpBtn.attr("src", "/Images/up-color.png");
                    DownBtn.attr("src", "/Images/down-empty.png");
                }
            });
        }
    });

    $(".btnDownVote").click(function ()
    {
        var DownBtn = $(this);
        var UpBtn = DownBtn.parent().find(".btnUpVote");
        if (DownBtn.attr("src") == "/Images/down-empty.png")
        {
            var value;
            if (UpBtn.attr("src") == "/Images/up-empty.png" && DownBtn.attr("src") == "/Images/down-empty.png")
                value = -1;
            else
                value = -2;
            $.ajax({
                url: "/api/Questions?answerid=" + UpBtn.attr("data-answerid") + "&value=" + value + "&UserID=@Session["CurrentUserID"]",
                type: "POST",
                success: function () {
                    DownBtn.parent().find(".votescount").text(parseInt(DownBtn.parent().find(".votescount").text()) + value);
                    DownBtn.attr("src", "/Images/down-color.png");
                    UpBtn.attr("src", "/Images/up-empty.png");
                }
            });
        }
    });

</script>
<script>
    $(".editbutton").click(function ()
    {
        $(this).parent().find(".needs-validation").removeClass("d-none");
        $(this).hide();
        $(this).parent().find(".answer").hide();
    });
</script>